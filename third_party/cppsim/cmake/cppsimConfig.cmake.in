@PACKAGE_INIT@

if(TARGET cppsim::cppsim)
  # Protect against double definitions due to previous call or
  # add_subdirectory()
  return()
endif()

# ==============================================================================

find_package(pybind11 CONFIG REQUIRED)
find_package(res_embed CONFIG REQUIRED)
find_package(OpenMP REQUIRED)
find_package(
  Python @CPPSIM_PYTHON_VERSION_MIN@
  COMPONENTS Interpreter Development.Embed
  REQUIRED)

# ------------------------------------------------------------------------------

if(NOT TARGET digestpp::digestpp)
  add_library(digestpp::digestpp INTERFACE IMPORTED)
  target_include_directories(
    digestpp::digestpp
    INTERFACE
      "${PACKAGE_PREFIX_DIR}/@CPPSIM_INSTALL_INCLUDEDIR@/third_party/digestpp-src"
  )
endif()

# ==============================================================================

set(CPPSIM_INCLUDE_DIR "${PACKAGE_PREFIX_DIR}/@CPPSIM_INSTALL_INCLUDEDIR@")

include(${CMAKE_CURRENT_LIST_DIR}/cppsimTargets.cmake)

include(${CMAKE_CURRENT_LIST_DIR}/commands/kernelgen.cmake)

# ==============================================================================
